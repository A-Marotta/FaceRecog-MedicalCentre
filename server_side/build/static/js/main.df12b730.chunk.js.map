{"version":3,"sources":["components/sidebar/Sidebar.jsx","components/topbar/Topbar.jsx","components/medclerk/dashboard/Dashboard.jsx","components/medclerk/doctor/DoctorList.jsx","components/medclerk/doctor/BookAppointment.jsx","components/medclerk/doctor/AddAvailability.jsx","components/medclerk/doctor/Doctor.jsx","components/medclerk/patient/PatientRegistration.jsx","components/medclerk/patient/Patient.jsx","pages/login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","history","useHistory","className","to","onClick","localStorage","removeItem","push","window","location","getToday","dateVar","Date","toString","split","day","month","date","getMonth","Topbar","user","JSON","parse","getItem","data","name","Dashboard","useState","monthAppointments","setMonthAppointments","todayAppointments","setTodayAppointments","pastWeekAppointments","setPastWeekAppointments","curDate","getDate","curMonth","curYear","getFullYear","length","curDateFull","useEffect","axios","post","then","res","catch","err","curDayApt","newDate","getTime","toISOString","dateOneWeekAgo","current_date","previous_week_date","dataLastSevenDays","src","alt","title","value","tabListNoTitle","key","tab","DoctorList","state","doctorTab","allDoctors","availableDoctors","onTabChange","type","setState","all","get","this","map","doctor","doctor_name","doctor_img","email","_id","style","width","tabList","activeTabKey","cardDisplay","React","Component","BookAppointment","setSelectedDate","doctorList","setDoctorList","selectedAptTime","setSelectedAptTime","patientEmail","setPatientEmail","patientLoader","setPatientLoader","originalDate","setOriginalDate","handlePatientSearch","e","status","Search","Input","onChange","dateValue","calendarDate","console","log","available_date","doctorsAvailable","forEach","doctorObject","label","docArray","available_doctor","start_time","doctor_id","timeSlots","timeslot","timeObject","children","setTimeout","orientation","plain","options","placeholder","onSearch","loading","size","modifiedDate","patient_id","disabled","AddAvailability","doctorInfo","setDoctorInfo","doctorLoader","setDoctorLoader","workingDate","setWorkingDate","startTime","setStartTime","finishTime","setFinishTime","setOperationSuccess","setOperationFail","antIcon","LoadingOutlined","fontSize","spin","handleDoctorSearch","bordered","slice","pop","undefined","newStartTime","newFinishTime","end_time","indicator","Doctor","layout","labelCol","span","wrapperCol","validateMessages","required","types","number","range","DragAndDropFileUploader","props","onFinish","values","method","password_digest","password","patient_name","dob","withCredentials","url","open","handleModalClick","bind","uppy","Uppy","id","autoProceed","debug","use","Webcam","XHRUpload","endpoint","fieldName","formData","close","Item","rules","message","Password","target","document","body","plugins","trigger","offset","htmlType","Patient","Login","loginUsername","setLoginUsername","loginPassword","setLoginPassword","setError","setLoading","onSubmit","preventDefault","setItem","stringify","App","loggedIn","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df12b730.chunk.js","sourcesContent":["import { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport PersonIcon from '@material-ui/icons/Person'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport './sidebar.css'\n\n\nexport default function Sidebar() {\n    const history = useHistory()\n\n    return (\n        <ProSidebar className=\"sidebar\">\n            <SidebarHeader>\n                <h3 className=\"sidebar-title\">MedCentre</h3>\n            </SidebarHeader>\n            <SidebarContent>\n                <div className=\"sidebar-item main-item\">\n                    <span className=\"sidebar-icon\"><DashboardIcon /></span>\n                    <Link to=\"/dashboard\" className=\"link-to\"><h3 className=\"sidebar-links\">Dashboard</h3></Link>\n                </div>\n                <div className=\"sidebar-item sub-item\">\n                    <span className=\"sidebar-icon\"><LocalHospitalIcon /></span>\n                    <Link to=\"/doctors\" className=\"link-to\"><h3 className=\"sidebar-links\">Doctors</h3></Link>\n                </div>\n                <div className=\"sidebar-item sub-item\">\n                    <span className=\"sidebar-icon\"><PersonIcon /></span>\n                    <Link to=\"patients\" className=\"link-to\"><h3 className=\"sidebar-links\">Patients</h3></Link>\n                </div>\n            </SidebarContent>\n            <SidebarFooter>\n                <h3 className=\"sidebar-footer\" onClick={() => {\n                    localStorage.removeItem('userInfo')\n                    history.push(\"/\")\n                    window.location = \"/\"\n                }}>Logout</h3>\n            </SidebarFooter>\n        </ProSidebar>\n    )\n}\n\n\n","import React from 'react'\nimport './topbar.css'\n\nfunction getToday() {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let dateVar = new Date()\n    let [day, month, date, ...rest] = dateVar.toString().split(' ')\n    month = months[dateVar.getMonth()]\n\n    return `${day} ${month} ${date}`\n}\n\nexport default function Topbar() {\n    const user = JSON.parse(localStorage.getItem('userInfo')).data.name\n\n    return (\n        <div className=\"topbar\">\n            <div className=\"topbar-left\">\n                <span className=\"welcome-user\">Welcome, <span className=\"user_name\">{user}.</span></span>\n            </div>\n            <div className=\"topbar-right\">\n                <div className=\"date\">\n                    {getToday()}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import axios from 'axios'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { \n    Statistic\n} from 'antd'\n\nimport './dashboard.css'\n\nexport default function Dashboard() {\n    const [monthAppointments, setMonthAppointments] = useState()\n    const [todayAppointments, setTodayAppointments] = useState()\n    const [pastWeekAppointments, setPastWeekAppointments] = useState()\n    const user = JSON.parse(localStorage.getItem('userInfo')).data.name\n\n    const curDate = new Date().getDate()\n    let curMonth = new Date().getMonth() +1\n    const curYear = new Date().getFullYear()\n\n    if(curMonth.toString().length === 1) {\n        curMonth = `0${curMonth}`\n    }  \n   \n    const curDateFull = `${curYear}-${curMonth}-${curDate}`\n\n\n    useEffect(() => {\n        curMonthApt()\n        curDayApt()\n        dataLastSevenDays()\n    })\n\n    function curMonthApt() {\n        axios.post('/api/statistic/curmonth/appointments', \n            { month: `${curYear}-${curMonth}` }\n        )\n        .then(res => {\n            setMonthAppointments(res.data)\n        })\n        .catch(err => {\n            setMonthAppointments('server error.')\n        })\n    }\n\n    function curDayApt() {\n        if(curMonth.toString().length === 1) {\n            curMonth = `0${curMonth}`\n        }\n\n        axios.post('/api/statistic/curdate/appointments', \n            { date: curDateFull }\n        )\n        .then(res => {\n            setTodayAppointments(res.data)\n        })\n        .catch(err => {\n            setTodayAppointments('server error.')\n        })\n    }\n\n    function dataLastSevenDays() {\n        const newDate = new Date()\n        let dateLessOneWeek = new Date(newDate.getTime() - (86400000 * 7))\n        const [dateOneWeekAgo, ...rest] = dateLessOneWeek.toISOString().split('T')\n\n        axios.post('/api/statistic/pastweek/appointments', \n        { \n            current_date: curDateFull,\n            previous_week_date: dateOneWeekAgo\n        }\n        )\n        .then(res => {\n            setPastWeekAppointments(res.data)\n        })\n        .catch(err => {\n            setPastWeekAppointments('server error.')\n        })\n    }\n\n    return (\n        <>\n            <div className=\"dashboard-wrapper\">\n                <h1 className=\"dashboard-title\"> Dashboard </h1>\n            </div>\n            <div className=\"dashboard-banner\">\n                <img src=\"img/banner_1.jpeg\" alt=\"\" />\n            </div>\n            <div className=\"dashboard-wrapper\">\n                <div className=\"top-stats\">\n                    <Statistic title=\"Todays appointments\" value={todayAppointments} />\n                    <Statistic title=\"Past seven days\" value={pastWeekAppointments} />\n                    <Statistic title=\"Monthly appointments\" value={monthAppointments} />\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n","import React from 'react';\nimport axios from 'axios'\nimport { Card } from 'antd';\n\nimport 'antd/dist/antd.css';\n\nconst tabListNoTitle = [\n    {\n      key: 'allDoctors',\n      tab: 'All doctors',\n    },\n    {\n      key: 'doctorsWorkingToday',\n      tab: 'Doctors Working Today',\n    }\n]\n\nclass DoctorList extends React.Component {\n    state = {\n        doctorTab: 'allDoctors',\n        allDoctors: [],\n        availableDoctors: []\n    }\n\n    componentDidMount() {\n        axios.all([\n            axios.get(`/api/medclerk/reporting/listdoctors`)\n                .then(res => {\n                    this.setState({ allDoctors: res.data })\n            }),\n            axios.get(`/api/medclerk/reporting/listdoctorstoday`)\n                .then(res => {\n                    this.setState({ availableDoctors: res.data })\n            })\n        ])\n    }\n\n    onTabChange = (key, type) => {\n        this.setState({ [type]: key })\n    }\n\n    cardDisplay() {\n        if(this.state.doctorTab === 'allDoctors') {\n            return <div className=\"doctor-wrapper\"> \n                {this.state.allDoctors.map(doctor => \n                    <div key={doctor._id}className=\"card\">\n                        <h4 className=\"doctor-name\">{doctor.doctor_name}</h4>\n                        <img className=\"doctor-img\" src={doctor.doctor_img} alt=\"Avatar\"></img>\n                        <p className=\"doctor-email\">{doctor.email}</p> \n                    </div>\n                )}\n            </div>\n        } else {\n            return <div className=\"doctor-wrapper\"> \n            {this.state.availableDoctors.map(doctor => \n                <div key={doctor._id}className=\"card-today\">\n                    <h4 className=\"doctor-name\">{doctor.doctor_name}</h4>\n                    <img className=\"doctor-img\" src={doctor.doctor_img} alt=\"Avatar\"></img>\n                    <p className=\"doctor-email\">{doctor.email}</p> \n                </div>\n            )}\n        </div>\n        }\n        \n    }\n\n    render() {\n        return (\n            <>\n                <Card\n                    style={{ width: '100%' }}\n                    tabList={tabListNoTitle}\n                    activeTabKey={this.state.doctorTab}\n                    onTabChange={key => {\n                        this.onTabChange(key, 'doctorTab')\n                    }}\n                >\n                    {this.cardDisplay()}\n                </Card>\n            </>\n        );\n    }\n}\n\nexport default DoctorList","import React, { useState } from 'react'\nimport Calendar from 'react-calendar'\nimport { \n    Card,\n    Cascader,\n    Divider,\n    Button,\n    Input\n} from 'antd'\nimport axios from 'axios'\n\n\nimport 'react-calendar/dist/Calendar.css'\nimport 'antd/dist/antd.css'\nimport './book-apt.css'\n\nexport default function BookAppointment() {\n    const [selectedDate, setSelectedDate] = useState()\n    const [doctorList, setDoctorList] = useState([])\n    const [selectedAptTime, setSelectedAptTime] = useState()\n    const [patientEmail, setPatientEmail] = useState()\n    const [patientLoader, setPatientLoader] = useState()\n    const [originalDate, setOriginalDate] = useState()\n\n    function onChange(value) {\n        setSelectedAptTime(value)\n    }\n\n    function handlePatientSearch(e) {\n        setPatientLoader(true)\n\n        axios.post('/api/patient/validaccount', { email: e })\n            .then(res => {\n                if(res.status === 200) {\n                    setPatientEmail(res.data)\n                }\n                setPatientLoader(false)\n            })\n    }\n   \n    function submitAppointment() {\n        let [modifiedDate, ...rest] = originalDate.split('T')\n        modifiedDate = `${modifiedDate}T${selectedAptTime[1]}+10:00`\n\n        axios.post('/api/patient/appointment', \n            { \n                doctor_id: selectedAptTime[0],\n                patient_id: patientEmail._id,\n                start_time: modifiedDate\n            }\n        )\n        .then(res => {\n            if(res.status === 200) {\n                setPatientEmail(res.data)\n            }\n            setPatientLoader(false)\n        })\n    }\n\n    const newDate = (dateValue) => {\n        setDoctorList()\n\n        const newDate = new Date(dateValue)\n        let followingDay = new Date(newDate.getTime() + (86400000 * 1))\n        let [calendarDate, ...rest] = followingDay.toISOString().split('T')\n        calendarDate += 'T00:00:00+10:00'\n        console.log(calendarDate)\n        setSelectedDate(calendarDate)\n        \n        axios.post('/api/medclerk/reporting/listdoctorsondate', { available_date: calendarDate })\n            .then(res => {\n\n                let doctorsAvailable = []\n\n                res.data.forEach(doctor => {\n                    let doctorObject = {\n                        value: doctor._id,\n                        label: doctor.doctor_name\n                    }\n\n                    doctorsAvailable.push(doctorObject)\n                })\n\n                return doctorsAvailable\n            })\n            .then(res => {\n                setOriginalDate(calendarDate)\n                const [newDate, ...rest] = calendarDate.split('T')\n                let docArray = []\n                res.forEach(available_doctor => {\n                    axios.post('/api/patient/checkavailapt', { \n                        start_time: newDate, \n                        doctor_id: available_doctor.value \n                    })\n                    .then(res => {\n                        let timeSlots = []\n\n                        res.data.forEach(timeslot => {\n                            timeslot = timeslot.split('T')[1]\n                            timeslot = timeslot.split('+')[0]\n\n                            let timeObject = {\n                                value: timeslot,\n                                label: timeslot\n                            }\n\n                            timeSlots.push(timeObject)\n                        })\n                        available_doctor.children = timeSlots\n                        docArray.push(available_doctor)\n                    })\n                })\n                setTimeout(function () {\n                    setDoctorList(docArray.map(doctor => doctor))\n                }, 1000);\n            })\n    }\n    const { Search } = Input;\n    return (\n        <Card className=\"book-apt-card\" type=\"inner\" title=\"Book a patient\">\n            <div className=\"apt-wrapper\">\n                <div className=\"apt-left\">\n                    <Calendar\n                    onChange={newDate}\n                    value={new Date()}\n                    />\n                </div>\n                <div className=\"apt-right\">\n                    <Divider orientation=\"left\" plain>\n                        Select doctor followed by available time.\n                    </Divider>\n\n                    <Cascader options={doctorList} onChange={onChange} placeholder=\"Please select\" />\n\n                    <Divider className=\"divider-padding-top\" orientation=\"left\" plain>\n                        Enter patient name \n                    </Divider>\n\n                    {patientLoader \n                        ? <Search placeholder=\"Please enter patient email address...\" onSearch={handlePatientSearch} loading />\n                        : <Search placeholder=\"Please enter patient email address...\" onSearch={handlePatientSearch} />\n                    }\n\n                    <Divider className=\"divider-padding-top\" orientation=\"left\" plain>\n                        Book appointment\n                    </Divider>\n\n                    {selectedAptTime && patientEmail\n                        ? \n                            <Button type=\"primary\" size={24} onClick={submitAppointment}>\n                                Submit\n                            </Button>\n                        :\n                            <Button type=\"primary\" disabled>\n                                Submit\n                            </Button>\n                    }\n\n                </div>\n            </div>\n        </Card>\n    )\n}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { \n    Card, \n    Divider,\n    Input,\n    DatePicker,\n    Button,\n    TimePicker,\n    Spin\n} from 'antd'\nimport {\n    CheckOutlined,\n    StopOutlined\n} from '@ant-design/icons'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport 'antd/dist/antd.css'\nimport './availability.css'\n\nexport default function AddAvailability() {\n    const [doctorInfo, setDoctorInfo] = useState()\n    const [doctorLoader, setDoctorLoader] = useState()\n    const [workingDate, setWorkingDate] = useState()\n    const [startTime, setStartTime] = useState()\n    const [finishTime, setFinishTime] = useState()\n    const [operationSuccess, setOperationSuccess] = useState()\n    const [operationFail, setOperationFail] = useState()\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    function handleDoctorSearch(e) {\n        setDoctorLoader(true)\n\n        axios.post('/api/doctor/validaccount', { email: e })\n            .then(res => {\n                if(res.status === 200) {\n                    console.log(res.data)\n                    setDoctorInfo(res.data)\n                }\n                setDoctorLoader(false)\n            })\n    }\n\n    function handleWorkingDate(e) {\n        let [date, ...rest] = e.toISOString().split('T')\n        setWorkingDate(date)\n    }\n\n    function handleStartTimeChange(e) {\n        let handleMomentString = e.toString().split(' ')\n        let startTime = handleMomentString.slice(-2)\n        startTime.pop()\n        setStartTime(startTime)\n    }\n\n    function handleFinishTimeChange(e) {\n        let handleMomentString = e.toString().split(' ')\n        let finishTime = handleMomentString.slice(-2)\n        finishTime.pop()\n        setFinishTime(finishTime)\n    }\n\n    function submitWorkingTime() {\n        setDoctorLoader(true)\n        const doctor_id = doctorInfo._id\n        const newStartTime = `${workingDate}T${startTime}+10:00`\n        const newFinishTime = `${workingDate}T${finishTime}+10:00`\n\n        axios.post('/api/doctor/availability', \n        { \n            doctor_id: doctor_id,\n            start_time: newStartTime,\n            end_time: newFinishTime,\n        }\n        )\n        .then(res => {\n            setDoctorLoader(false)\n            console.log(res)\n            if(res.status === 200) {\n                setOperationSuccess(true)\n            }\n        })\n        .catch(err => {\n            setOperationFail(true)\n        })\n    }\n\n    const { Search } = Input;\n    return (\n        <Card className=\"add-avail-card\" type=\"inner\" title=\"Insert availability\">\n\n            <Divider className=\"divider-padding-top\" orientation=\"left\" plain>\n                Enter doctor name \n            </Divider>\n\n            {doctorLoader \n                ? <Search placeholder=\"Please enter doctor email address...\" onSearch={handleDoctorSearch} loading />\n                : <Search placeholder=\"Please enter doctor email address...\" onSearch={handleDoctorSearch} />\n            }\n\n            <Divider className=\"divider-padding-top\" orientation=\"left\" plain>\n                Enter working date \n            </Divider>\n\n            <div className=\"doctor-date-wrapper\">\n                <DatePicker className=\"input-doc-date-avail\" bordered={false} onChange={handleWorkingDate}/>   \n                <TimePicker className=\"input-doc-date-avail\" placeholder=\"Start Time\" onChange={handleStartTimeChange} />\n                <TimePicker className=\"input-doc-date-avail\" placeholder=\"Finish Time\" onChange={handleFinishTimeChange} />\n            </div>\n\n            <div className=\"operation-status\">\n                {workingDate && startTime && finishTime && doctorInfo !== null && doctorInfo !== undefined\n                    ? \n                        <Button className=\"submit-doc-date-avail\" type=\"primary\" size={24} onClick={submitWorkingTime}>\n                            Submit\n                        </Button>\n                    :\n                        <Button className=\"submit-doc-date-avail\" type=\"primary\" disabled>\n                            Submit\n                        </Button>\n                }\n                {doctorLoader ? <Spin className=\"operation-indicator\" indicator={antIcon} /> : ''}\n            </div>\n        </Card> \n    )\n}\n","import React from 'react'\nimport DoctorList from './DoctorList'\nimport BookAppointment from './BookAppointment'\nimport AddAvailability from './AddAvailability'\n\nimport './doctor.css'\n\nexport default function Doctor() {\n    return (\n        <div className=\"medclerk-doctor-wrapper\">\n            <DoctorList />\n            <BookAppointment />\n            <AddAvailability />\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Uppy from '@uppy/core'\nimport Webcam from '@uppy/webcam'\nimport Dashboard from '@uppy/react/lib/Dashboard'\nimport XHRUpload from '@uppy/xhr-upload'\nimport { Form, Input, InputNumber, Button } from 'antd'\nimport axios from 'axios'\n\nimport './webcam.css'\nimport '@uppy/core/dist/style.css'\nimport '@uppy/dashboard/dist/style.css'\nimport 'antd/dist/antd.css'\n\n\nconst layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n}\n\nconst validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!',\n      number: '${label} is not a valid number!',\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}',\n    },\n}\n\nexport default class DragAndDropFileUploader extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n    this.handleModalClick = this.handleModalClick.bind(this);\n\n    this.uppy = Uppy({ id: 'uppy1', autoProceed: true, debug: true })\n    .use(Webcam)\n    .use(XHRUpload, {\n        endpoint: '/api/auth/patient/uploadimage',\n        fieldName: 'photo',\n        formData: true,\n    })\n  }\n\n  onFinish = (values) => {\n     axios({ \n      method: \"post\",\n      data: {\n        email: values.user.email,\n        password_digest: values.user.password,\n        patient_name: values.user.name,\n        dob: values.user.dob\n      },\n      withCredentials: true,\n      url: '/api/auth/patient/register'\n    })\n    }\n\n\n  componentWillUnmount () {\n    this.uppy.close();\n  }\n\n  handleModalClick () {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n    render () {\n        const { open } = this.state;\n\n        return (\n          <div>\n              <Form {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\n                  <Form.Item\n                      name={[\"user\", \"name\"]}\n                      label=\"Name\"\n                      rules={[\n                          {\n                              required: true,\n                          },\n                      ]}\n                  >\n                      <Input id=\"input-width\"/>\n                  </Form.Item>\n      \n                  <Form.Item\n                      name={[\"user\", \"email\"]}\n                      label=\"Email\"\n                      rules={[\n                          {\n                              type: \"email\",\n                              required: true,\n                          },\n                      ]}\n                  >\n                      <Input id=\"input-width\"/>\n                  </Form.Item>\n      \n                  <Form.Item\n                      label=\"Password\"\n                      name={[\"user\", \"password\"]}\n                      rules={[\n                          {\n                              required: true,\n                              message: \"Please input your password!\",\n                          },\n                      ]}\n                  >\n                      <Input.Password id=\"input-width\"/>\n                  </Form.Item>\n      \n                  <Form.Item\n                      name={[\"user\", \"dob\"]}\n                      label=\"Date of birth\"\n                      rules={[\n                          {\n                              required: true,\n                          },\n                      ]}\n                  >\n                      <Input id=\"input-width\"/>\n                  </Form.Item>\n      \n                  <Dashboard uppy={this.uppy} target={document.body} plugins={[\"Webcam\"]} trigger=\"#dashboard\" />\n                  <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                          Submit\n                      </Button>\n                  </Form.Item>\n              </Form>\n          </div>\n      )      \n    }\n}\n\n","import React from 'react'\nimport PatientRegistration from './PatientRegistration'\n\nimport './patient.css'\n\n\nexport default function Patient() {\n    return (\n        <div className=\"medclerk-patient-wrapper\">\n            <h2 className=\"patient-registration-title\">Patient registration form</h2>\n            <PatientRegistration />\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport axios from 'axios'\n\nimport './login.css'\n\nexport default function Login() {\n    const loggedIn = localStorage.getItem('userInfo')\n    const [loginUsername, setLoginUsername] = useState('')\n    const [loginPassword, setLoginPassword] = useState('')\n    const [error, setError] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        setLoading(true)\n\n        axios({ \n            method: \"post\",\n            data: {\n                email: loginUsername, \n                password_digest: loginPassword \n            },\n            withCredentials: true,\n            url: '/api/auth/medclerk/login'\n        })\n        .then(res => {\n            setLoading(false)\n            console.log(res)\n            localStorage.setItem('userInfo', JSON.stringify(res))\n            if (res.status == 200) {\n                window.location = \"/dashboard\" \n            }\n        })\n        .catch(err => {\n            setLoading(false)\n            setError(err)\n        })\n        \n    }   \n\n    return (\n        <div className=\"login-wrapper\">\n            <div className=\"login-card\">\n                <div className=\"login-left\"></div>\n                <div className=\"login-right\">\n                        <h1 className=\"login-welcome\">MedCentre</h1>\n                        <span className=\"login-text\">Welcome back!</span>\n                        <span className=\"login-text\">please login to view todays schedule.</span> \n                        <form className=\"login-form\" onSubmit={handleLogin}>\n                            <input className=\"login-input\" type=\"email\" placeholder=\"Email address\" value={loginUsername} onChange={e => setLoginUsername(e.target.value)} required/>\n                            <input className=\"login-input\" type=\"password\" placeholder=\"Password\" value={loginPassword} onChange={e => setLoginPassword(e.target.value)} required/>\n                            <button className=\"login-btn\" type=\"submit\">Log in</button>\n                        </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import {\n  Switch,\n  BrowserRouter as Router,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport { useEffect } from \"react\"\n\nimport Sidebar from \"./components/sidebar/Sidebar\"\nimport Topbar from \"./components/topbar/Topbar\"\nimport Dashboard from \"./components/medclerk/dashboard/Dashboard\"\nimport Doctor from \"./components/medclerk/doctor/Doctor\"\nimport Patient from \"./components/medclerk/patient/Patient\"\nimport Login from \"./pages/login/Login\"\n\nimport './App.css';\n\nfunction App() {\n    const loggedIn = localStorage.getItem('userInfo')\n\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    {loggedIn ? <Redirect to=\"/dashboard\" /> : <Login />}\n                </Route>\n\n                <div className=\"content\">\n                    <Sidebar />\n                    <Topbar />\n\n                    <Route exact path=\"/dashboard\">\n                        {loggedIn ? <Dashboard /> : <Redirect to=\"/\" />}\n                    </Route>\n                    <Route exact path=\"/doctors\">\n                        {loggedIn ? <Doctor /> : <Redirect to=\"/\" />}\n                    </Route>\n                    <Route exact path=\"/patients\">\n                        {loggedIn ? <Patient /> : <Redirect to=\"/\" />}\n                    </Route>\n                </div>\n            </Switch>\n        </Router>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}